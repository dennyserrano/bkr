angular.module("checklist-model",[]).directive("checklistModel",["$parse","$compile",function(e,t){function r(e,t,r){if(angular.isArray(e))for(var c=e.length;c--;)if(r(e[c],t))return!0;return!1}function c(c,a,n){var l=n.checklistModel;n.$set("checklistModel",null),t(a)(c),n.$set("checklistModel",l);var o=e(l),i=o.assign,u=e(n.checklistChange),s=e(n.checklistBeforeChange),h=n.checklistValue?e(n.checklistValue)(c.$parent):n.value,p=angular.equals;if(n.hasOwnProperty("checklistComparator"))if("."==n.checklistComparator[0]){var k=n.checklistComparator.substring(1);p=function(e,t){return e[k]===t[k]}}else p=e(n.checklistComparator)(c.$parent);function g(e,t){var a,n,l,u=o(c.$parent);angular.isFunction(i)&&i(c.$parent,!0===t?(a=u,n=e,l=p,r(a=angular.isArray(a)?a:[],n,l)||a.push(n),a):function(e,t,r){if(angular.isArray(e))for(var c=e.length;c--;)if(r(e[c],t)){e.splice(c,1);break}return e}(u,e,p))}function d(e,t){s&&!1===s(c)?g(h,c[n.ngModel]):c[n.ngModel]=r(e,h,p)}c.$watch(n.ngModel,function(e,t){e!==t&&(s&&!1===s(c)?c[n.ngModel]=r(o(c.$parent),h,p):(g(h,e),u&&u(c)))}),angular.isFunction(c.$parent.$watchCollection)?c.$parent.$watchCollection(l,d):c.$parent.$watch(l,d,!0)}return{restrict:"A",priority:1e3,terminal:!0,scope:!0,compile:function(e,t){if(("INPUT"!==e[0].tagName||"checkbox"!==t.type)&&"MD-CHECKBOX"!==e[0].tagName&&!t.btnCheckbox)throw'checklist-model should be applied to `input[type="checkbox"]` or `md-checkbox`.';if(!t.checklistValue&&!t.value)throw"You should provide `value` or `checklist-value`.";return t.ngModel||t.$set("ngModel","checked"),c}}}]);